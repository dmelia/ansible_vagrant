---
- name: APT update
  apt: upgrade=dist force_apt_get=yes

- name: Install vim, htop, git, zsh
  apt: name={{ item }} state=present update_cache=yes
  loop: [ 'vim', 'htop', 'git-all', 'zsh', 'ruby' ]

# Installation de Docker

- name: Install required system packages for Docker
  apt: name={{ item }} state=latest update_cache=yes
  loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python-pip', 'virtualenv', 'python3-setuptools']

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: Update apt and install docker-ce
  apt: update_cache=yes name=docker-ce state=latest

- name: Install Docker Module for Python
  pip:
    name: docker

# Installation de Puppet

- name: Install Puppet source list
  apt:
    deb: "https://apt.puppetlabs.com/puppetlabs-release-pc1-jessie.deb"
    state: "present"

- name: Update cache
  apt:
    update_cache: "yes"

- name: Install Puppet
  apt:
    name: "puppet-agent"
    state: "present"

- name: Start Puppet
  service:
    name: 'puppet.service'
    enabled: 'yes'
    state: 'started'

# Mise en place de php, mysql et apache2

- name: Install prerequisites
  apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
  loop: [ 'aptitude' ]

# Apache Configuration
- name: Install LAMP Packages
  apt: name={{ item }} update_cache=yes state=latest
  loop: [ 'apache2', 'mysql-server', 'python3-pymysql', 'php', 'php-mysql', 'libapache2-mod-php', 'python-mysqldb' ]

- name: Create document root
  file:
    path: "/var/www/{{ http_host }}"
    state: directory
    owner: "{{ app_user }}"
    mode: '0755'

- name: Set up Apache virtualhost
  template:
    src: "files/apache.conf.j2"
    dest: "/etc/apache2/sites-available/{{ http_conf }}"
  notify: Reload Apache

- name: Enable new site
  shell: /usr/sbin/a2ensite {{ http_conf }}
  notify: Reload Apache

- name: Disable default Apache site
  shell: /usr/sbin/a2dissite 000-default.conf
  when: disable_default
  notify: Reload Apache

# MySQL Configuration
- name: Sets the root password
  mysql_user:
    name: root
    password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Removes all anonymous user accounts
  mysql_user:
    name: ''
    host_all: yes
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Removes the MySQL test database
  mysql_db:
    name: test
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

# UFW Configuration

- name: "UFW - Allow HTTP on port {{ http_port }}"
  ufw:
    rule: allow
    port: "{{ http_port }}"
    proto: tcp

# PHP Info Page

- name: Sets Up PHP Info Page
  template:
    src: "files/info.php.j2"
    dest: "/var/www/{{ http_host }}/info.php"

# Install Composer

- name: Validate Composer checksum
  get_url:
    checksum: "sha384:756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3"
    dest: /usr/src/
    url: https://getcomposer.org/installer

- name: Download and install Composer
  shell: curl -sS https://getcomposer.org/installer | php
  args:
    chdir: /usr/src/
    creates: /usr/local/bin/composer
    warn: false

- name: Add Composer to global path
  copy:
    dest: /usr/local/bin/composer
    group: root
    mode: '0755'
    owner: root
    src: /usr/src/composer.phar
    remote_src: yes
...